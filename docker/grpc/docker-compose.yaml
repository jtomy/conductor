version: '2.3'

services:

  postgresdb:
    image: postgres
    networks:
      - internal
    ports:
      - 5432:5432
    volumes:
      - ".docker/postgresdb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    environment:
      POSTGRES_PASSWORD: postgres

  conductor-server:
    environment:
      - CONFIG_PROP=config-postgresql-grpc.properties
    image: conductor:server
    build:
      context: ../../
      dockerfile: docker/server/Dockerfile
    networks:
      - internal
    ports:
      - 8080:8080
      - 8090:8090
    depends_on:
      elasticsearch:
        condition: service_healthy
#      mysql:
#        condition: service_healthy

  conductor-ui:
    environment:
      - WF_SERVER=http://conductor-server:8080/api/
    image: conductor:ui
    build:
      context: ../../
      dockerfile: docker/ui/Dockerfile
    networks:
      - internal
    ports:
      - 5000:5000
    depends_on:
      - conductor-server

  # https://www.elastic.co/guide/en/elasticsearch/reference/5.6/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.8
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - transport.host=0.0.0.0
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - internal
    ports:
      - 9200:9200
      - 9300:9300
    healthcheck:
      test: timeout 5 bash -c 'cat < /dev/null > /dev/tcp/localhost/9300'
      interval: 5s
      timeout: 5s
      retries: 12

volumes:
  conductor_postrges:

networks:
  internal:
